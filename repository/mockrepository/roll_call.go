// Code generated by MockGen. DO NOT EDIT.
// Source: roll_call.go
//
// Generated by this command:
//
//	mockgen -source=roll_call.go -destination=mockrepository/roll_call.go -package=mockrepository
//

// Package mockrepository is a generated GoMock package.
package mockrepository

import (
	context "context"
	reflect "reflect"

	model "github.com/traPtitech/rucQ/model"
	gomock "go.uber.org/mock/gomock"
)

// MockRollCallRepository is a mock of RollCallRepository interface.
type MockRollCallRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRollCallRepositoryMockRecorder
	isgomock struct{}
}

// MockRollCallRepositoryMockRecorder is the mock recorder for MockRollCallRepository.
type MockRollCallRepositoryMockRecorder struct {
	mock *MockRollCallRepository
}

// NewMockRollCallRepository creates a new mock instance.
func NewMockRollCallRepository(ctrl *gomock.Controller) *MockRollCallRepository {
	mock := &MockRollCallRepository{ctrl: ctrl}
	mock.recorder = &MockRollCallRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRollCallRepository) EXPECT() *MockRollCallRepositoryMockRecorder {
	return m.recorder
}

// CreateRollCall mocks base method.
func (m *MockRollCallRepository) CreateRollCall(ctx context.Context, rollCall *model.RollCall) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRollCall", ctx, rollCall)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRollCall indicates an expected call of CreateRollCall.
func (mr *MockRollCallRepositoryMockRecorder) CreateRollCall(ctx, rollCall any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRollCall", reflect.TypeOf((*MockRollCallRepository)(nil).CreateRollCall), ctx, rollCall)
}

// GetRollCalls mocks base method.
func (m *MockRollCallRepository) GetRollCalls(ctx context.Context, campID uint) ([]model.RollCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRollCalls", ctx, campID)
	ret0, _ := ret[0].([]model.RollCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRollCalls indicates an expected call of GetRollCalls.
func (mr *MockRollCallRepositoryMockRecorder) GetRollCalls(ctx, campID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRollCalls", reflect.TypeOf((*MockRollCallRepository)(nil).GetRollCalls), ctx, campID)
}
